$date
	Tue Jul 18 23:16:14 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_iflow $end
$var wire 16 ! addr [15:0] $end
$var wire 8 " d_to_fetch [7:0] $end
$var wire 8 # d_to_mem [7:0] $end
$var wire 8 $ iADD [7:0] $end
$var wire 8 % iSP [7:0] $end
$var wire 8 & iSTATUS [7:0] $end
$var wire 8 ' iX [7:0] $end
$var wire 8 ( iY [7:0] $end
$var wire 8 ) pc [7:0] $end
$var wire 8 * pc_next [7:0] $end
$var wire 7 + we [6:0] $end
$var wire 1 , we_y $end
$var wire 1 - we_x $end
$var wire 1 . we_stat $end
$var wire 1 / we_sp $end
$var wire 1 0 we_pc $end
$var wire 1 1 we_add $end
$var wire 3 2 target_selector_1 [2:0] $end
$var wire 3 3 target_selector_0 [2:0] $end
$var wire 3 4 source_selector_1 [2:0] $end
$var wire 3 5 source_selector_0 [2:0] $end
$var wire 8 6 reg_connect_1 [7:0] $end
$var wire 8 7 reg_connect_0 [7:0] $end
$var wire 1 8 phi2_int $end
$var wire 1 9 phi1_int $end
$var wire 8 : oY [7:0] $end
$var wire 8 ; oX [7:0] $end
$var wire 8 < oSTATUS [7:0] $end
$var wire 8 = oSP [7:0] $end
$var wire 8 > oPC [7:0] $end
$var wire 8 ? oADD [7:0] $end
$var wire 1 @ instruction_ready $end
$var wire 8 A instruction [7:0] $end
$var wire 8 B imm [7:0] $end
$var wire 8 C ialu_b [7:0] $end
$var wire 8 D ialu_a [7:0] $end
$var wire 8 E iPC [7:0] $end
$var wire 1 F get_next $end
$var wire 3 G fetch_selector [2:0] $end
$var wire 8 H d_from_mem [7:0] $end
$var wire 8 I d_from_fetch [7:0] $end
$var reg 16 J addr_in [15:0] $end
$var reg 8 K d_in [7:0] $end
$var reg 32 L i [31:0] $end
$var reg 1 M mem_write $end
$var reg 1 N phi0 $end
$var reg 1 O reset_n $end
$var reg 32 P seed [31:0] $end
$var reg 3 Q source_selector_01 [2:0] $end
$var reg 3 R target_selector_01 [2:0] $end
$scope module ADD $end
$var wire 8 S din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 T valid $end
$var wire 1 1 we $end
$var wire 1 8 clk $end
$var parameter 32 U REG_WIDTH $end
$var reg 8 V dout [7:0] $end
$upscope $end
$scope module PC $end
$var wire 8 W din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 X valid $end
$var wire 1 0 we $end
$var wire 1 8 clk $end
$var parameter 32 Y REG_WIDTH $end
$var reg 8 Z dout [7:0] $end
$upscope $end
$scope module SP $end
$var wire 8 [ din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 \ valid $end
$var wire 1 / we $end
$var wire 1 8 clk $end
$var parameter 32 ] REG_WIDTH $end
$var reg 8 ^ dout [7:0] $end
$upscope $end
$scope module STAT $end
$var wire 8 _ din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 ` valid $end
$var wire 1 . we $end
$var wire 1 8 clk $end
$var parameter 32 a REG_WIDTH $end
$var reg 8 b dout [7:0] $end
$upscope $end
$scope module X $end
$var wire 8 c din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 d valid $end
$var wire 1 - we $end
$var wire 1 8 clk $end
$var parameter 32 e REG_WIDTH $end
$var reg 8 f dout [7:0] $end
$upscope $end
$scope module Y $end
$var wire 8 g din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 h valid $end
$var wire 1 , we $end
$var wire 1 8 clk $end
$var parameter 32 i REG_WIDTH $end
$var reg 8 j dout [7:0] $end
$upscope $end
$scope module clk_mod $end
$var wire 1 N phi0 $end
$var wire 1 9 phi1 $end
$var wire 1 8 phi2 $end
$var wire 1 k reset_n $end
$upscope $end
$scope module decode $end
$var wire 1 9 clk $end
$var wire 1 O reset_n $end
$var wire 1 @ instruction_ready $end
$var wire 8 l instruction_in [7:0] $end
$var parameter 32 m ADDR_WIDTH $end
$var parameter 32 n OPP_WIDTH $end
$var parameter 32 o REG_WIDTH $end
$var reg 3 p add_mode [2:0] $end
$var reg 16 q addr [15:0] $end
$var reg 4 r fetch_counter [3:0] $end
$var reg 4 s fetch_target [3:0] $end
$var reg 1 F get_next $end
$var reg 8 t imm_addr [7:0] $end
$var reg 8 u instruction [7:0] $end
$var reg 8 v opp [7:0] $end
$var reg 5 w opp_code [4:0] $end
$var reg 1 x read_write $end
$var reg 3 y source_selector_0 [2:0] $end
$var reg 3 z source_selector_1 [2:0] $end
$var reg 3 { target_selector_0 [2:0] $end
$var reg 3 | target_selector_1 [2:0] $end
$var reg 7 } we [6:0] $end
$upscope $end
$scope module fetch $end
$var wire 1 9 clk $end
$var wire 8 ~ data_in [7:0] $end
$var wire 1 F get_next $end
$var wire 8 !" pc [7:0] $end
$var wire 1 O reset_n $end
$var parameter 32 "" ADDR_WIDTH $end
$var parameter 32 #" OPP_WIDTH $end
$var parameter 32 $" REG_WIDTH $end
$var reg 3 %" add_mode [2:0] $end
$var reg 16 &" addr [15:0] $end
$var reg 3 '" fetch_counter [2:0] $end
$var reg 3 (" fetch_source_selector [2:0] $end
$var reg 8 )" instruction [7:0] $end
$var reg 8 *" instruction_out [7:0] $end
$var reg 1 @ instruction_ready $end
$var reg 8 +" pc_next [7:0] $end
$var reg 8 ," reg_out [7:0] $end
$upscope $end
$scope module mem_test $end
$var wire 16 -" addr [15:0] $end
$var wire 1 N clk $end
$var wire 8 ." din [7:0] $end
$var wire 1 O reset_n $end
$var wire 1 /" we $end
$var wire 16 0" local_addr [15:0] $end
$var wire 8 1" dout [7:0] $end
$var parameter 32 2" ADDR_WIDTH $end
$var parameter 32 3" BASE $end
$var parameter 32 4" DEPTH $end
$var parameter 32 5" WIDTH $end
$upscope $end
$scope module reg_fan0 $end
$var wire 1 8 clk $end
$var wire 3 6" selector [2:0] $end
$var wire 8 7" in [7:0] $end
$var parameter 32 8" SIGNAL_WIDTH $end
$var reg 8 9" out0 [7:0] $end
$var reg 8 :" out1 [7:0] $end
$var reg 8 ;" out2 [7:0] $end
$var reg 8 <" out3 [7:0] $end
$var reg 8 =" out4 [7:0] $end
$var reg 8 >" out5 [7:0] $end
$var reg 8 ?" out6 [7:0] $end
$var reg 8 @" out7 [7:0] $end
$upscope $end
$scope module reg_fan1 $end
$var wire 1 8 clk $end
$var wire 3 A" selector [2:0] $end
$var wire 8 B" in [7:0] $end
$var parameter 32 C" SIGNAL_WIDTH $end
$var reg 8 D" out0 [7:0] $end
$var reg 8 E" out1 [7:0] $end
$var reg 8 F" out2 [7:0] $end
$var reg 8 G" out3 [7:0] $end
$var reg 8 H" out4 [7:0] $end
$var reg 8 I" out5 [7:0] $end
$var reg 8 J" out6 [7:0] $end
$var reg 8 K" out7 [7:0] $end
$upscope $end
$scope module reg_mux0 $end
$var wire 1 8 clk $end
$var wire 8 L" in0 [7:0] $end
$var wire 8 M" in1 [7:0] $end
$var wire 8 N" in2 [7:0] $end
$var wire 8 O" in3 [7:0] $end
$var wire 8 P" in4 [7:0] $end
$var wire 8 Q" in5 [7:0] $end
$var wire 8 R" in6 [7:0] $end
$var wire 8 S" in7 [7:0] $end
$var wire 3 T" selector [2:0] $end
$var parameter 32 U" SIGNAL_WIDTH $end
$var reg 8 V" out [7:0] $end
$upscope $end
$scope module reg_mux1 $end
$var wire 1 8 clk $end
$var wire 8 W" in0 [7:0] $end
$var wire 8 X" in1 [7:0] $end
$var wire 8 Y" in2 [7:0] $end
$var wire 8 Z" in3 [7:0] $end
$var wire 8 [" in4 [7:0] $end
$var wire 8 \" in5 [7:0] $end
$var wire 8 ]" in6 [7:0] $end
$var wire 8 ^" in7 [7:0] $end
$var wire 3 _" selector [2:0] $end
$var parameter 32 `" SIGNAL_WIDTH $end
$var reg 8 a" out [7:0] $end
$upscope $end
$scope begin main_loop $end
$var reg 8 b" mem_unit [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1000 `"
b1000 U"
b1000 C"
b1000 8"
b1000 5"
b100000 4"
b0 3"
b10000 2"
b1000 $"
b1000 #"
b10000 ""
b1000 o
b1000 n
b10000 m
b1000 i
b1000 e
b1000 a
b1000 ]
b1000 Y
b1000 U
$end
#0
$dumpvars
b10100 b"
bx a"
bx _"
bx ^"
b0 ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx T"
bx S"
b0 R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx B"
b0 A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 7"
bx 6"
bx 1"
bx 0"
x/"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
b101 ("
bx '"
bx &"
bx %"
bx !"
bx ~
b0 }
b0 |
b0 {
bx z
bx y
1x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx l
zk
bx j
zh
bx g
bx f
zd
bx c
bx b
z`
bz _
bx ^
z\
bz [
bx Z
zX
bx W
bx V
zT
bx S
bx R
bx Q
b10001010000111111011011000000100 P
xO
0N
1M
b0 L
b10100 K
b0 J
bx I
bx H
b101 G
xF
bx E
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
bx :
19
08
bx 7
bx 6
bx 5
bx 4
b0 3
b0 2
01
x0
0/
0.
0-
0,
bx00000x +
bx *
bx )
bx (
bx '
bz &
bz %
bx $
bx #
bx "
bx !
$end
#10
b111 R
b111 6"
b101 Q
b101 T"
09
b11011011 K
b1 J
b11011011 b"
b11101101101001101111010100110101 P
b1 L
18
1N
#15
19
08
0N
#20
09
b1111100 K
b10 J
b1111100 b"
b10111110010110110000110001110010 P
b10 L
18
1N
#25
19
08
0N
#30
09
b110101 K
b11 J
b110101 b"
b11010111111001100000101001011 P
b11 L
18
1N
#35
19
08
0N
#40
09
b1100111 K
b100 J
b1100111 b"
b110011100000101001100000010000 P
b100 L
18
1N
#45
19
08
0N
#50
09
b11110010 K
b101 J
b11110010 b"
b1111001010111001001010011010001 P
b101 L
18
1N
#55
19
08
0N
#60
09
b11101111 K
b110 J
b11101111 b"
b1110111100000101100100001011110 P
b110 L
18
1N
#65
19
08
0N
#70
09
b1000000 K
b111 J
b1000000 b"
b100000010001010011100101000111 P
b111 L
18
1N
#75
19
08
0N
#80
09
b101001 K
b1000 J
b101001 b"
b10010100100111100111100011011100 P
b1000 L
18
1N
#85
19
08
0N
#90
09
b1111 K
b1001 J
b1111 b"
b10000111111001011111010000101101 P
b1001 L
18
1N
#95
19
08
0N
#100
09
b11101001 K
b1010 J
b11101001 b"
b1110100101101111101000100001010 P
b1010 L
18
1N
#105
19
08
0N
#110
09
b111011 K
b1011 J
b111011 b"
b10011101110110011110011100000011 P
b1011 L
18
1N
#115
19
08
0N
#120
09
b10111110 K
b1100 J
b10111110 b"
b1011111001111000010010001101000 P
b1100 L
18
1N
#125
19
08
0N
#130
09
b11101010 K
b1101 J
b11101010 b"
b1110101011010100110111101001001 P
b1101 L
18
1N
#135
19
08
0N
#140
09
b10111010 K
b1110 J
b10111010 b"
b11011101001010101101001001110110 P
b1110 L
18
1N
#145
19
08
0N
#150
09
b110100 K
b1111 J
b110100 b"
b11010011100001000011001111111 P
b1111 L
18
1N
#155
19
08
0N
#160
09
bx b"
b0 J
0M
b0 L
18
1N
#165
19
08
0N
#170
09
b1 J
b1 L
18
1N
#175
19
08
0N
#180
09
b10 J
b10 L
18
1N
#185
19
08
0N
#190
09
b11 J
b11 L
18
1N
#195
19
08
0N
#200
09
b100 J
b100 L
18
1N
#205
19
08
0N
#210
09
b101 J
b101 L
18
1N
#215
19
08
0N
#220
09
b110 J
b110 L
18
1N
#225
19
08
0N
#230
09
b111 J
b111 L
18
1N
#235
19
08
0N
#240
09
b1000 J
b1000 L
18
1N
#245
19
08
0N
#250
09
b1001 J
b1001 L
18
1N
#255
19
08
0N
#260
09
b1010 J
b1010 L
18
1N
#265
19
08
0N
#270
09
b1011 J
b1011 L
18
1N
#275
19
08
0N
#280
09
b1100 J
b1100 L
18
1N
#285
19
08
0N
#290
09
b1101 J
b1101 L
18
1N
#295
19
08
0N
#300
09
b1110 J
b1110 L
18
1N
#305
19
08
0N
#310
09
b1111 J
b1111 L
18
1N
#315
19
08
0N
#320
09
b10101001 K
b0 J
1M
b1100111 b"
b0 L
18
1N
#325
19
08
0N
#330
09
b100 K
b1 J
b1 L
18
1N
#335
19
08
0N
#340
09
b10000101 K
b10 J
b10 L
18
1N
#345
19
08
0N
#350
09
b10 K
b11 J
b11 L
18
1N
#355
19
08
0N
#360
09
b0 K
b100 J
b100 L
18
1N
#365
19
08
0N
#370
09
b101 J
b101 L
18
1N
#375
19
08
0N
#380
09
b110 J
b110 L
18
1N
#385
19
08
0N
#390
09
b111 J
b111 L
18
1N
#395
19
08
0N
#400
09
b1000 J
b1000 L
18
1N
#405
19
08
0N
#410
09
b1001 J
b1001 L
18
1N
#415
19
08
0N
#420
09
b1010 J
b1010 L
18
1N
#425
19
08
0N
#430
09
b1011 J
b1011 L
18
1N
#435
19
08
0N
#440
09
b1100 J
b1100 L
18
1N
#445
19
08
0N
#450
09
b1101 J
b1101 L
18
1N
#455
19
08
0N
#460
09
b1110 J
b1110 L
18
1N
#465
19
08
0N
#470
09
b1111 J
b1111 L
18
1N
#475
19
08
0N
#480
09
bx b"
b10000 J
0M
b0 L
18
1N
#485
19
08
0N
#490
09
b10001 J
b1 L
18
1N
#495
19
08
0N
#500
09
b10010 J
b10 L
18
1N
#505
19
08
0N
#510
09
b10011 J
b11 L
18
1N
#515
19
08
0N
#520
09
b10100 J
b100 L
18
1N
#525
19
08
0N
#530
09
b10101 J
b101 L
18
1N
#535
19
08
0N
#540
09
b10110 J
b110 L
18
1N
#545
19
08
0N
#550
09
b10111 J
b111 L
18
1N
#555
19
08
0N
#560
09
b11000 J
b1000 L
18
1N
#565
19
08
0N
#570
09
b11001 J
b1001 L
18
1N
#575
19
08
0N
#580
09
b11010 J
b1010 L
18
1N
#585
19
08
0N
#590
09
b11011 J
b1011 L
18
1N
#595
19
08
0N
#600
09
b11100 J
b1100 L
18
1N
#605
19
08
0N
#610
09
b11101 J
b1101 L
18
1N
#615
19
08
0N
#620
09
b11110 J
b1110 L
18
1N
#625
19
08
0N
#630
09
b11111 J
b1111 L
18
1N
#635
19
08
0N
#640
09
b0 L
18
1N
#645
19
08
0N
#650
09
b1 L
18
1N
#655
19
08
0N
#660
09
b10 L
18
1N
#665
19
08
0N
#670
09
b11 L
18
1N
#675
19
08
0N
#680
09
b100 L
18
1N
#685
19
08
0N
#690
09
b101 L
18
1N
#695
19
08
0N
#700
09
b110 L
18
1N
#705
19
08
0N
#710
09
b111 L
18
1N
#715
19
08
0N
#720
09
b1000 L
18
1N
#725
19
08
0N
#730
09
b1001 L
18
1N
#735
19
08
0N
#740
09
b1010 L
18
1N
#745
19
08
0N
#750
09
b1011 L
18
1N
#755
19
08
0N
#760
09
b1100 L
18
1N
#765
19
08
0N
#770
09
b1101 L
18
1N
#775
19
08
0N
#780
09
b1110 L
18
1N
#785
19
08
0N
#790
09
b1111 L
18
1N
#795
19
08
0N
#800
09
b10000 L
18
1N
#805
19
08
0N
#810
09
b10001 L
18
1N
#815
19
08
0N
#820
09
b10010 L
18
1N
#825
19
08
0N
#830
09
b10011 L
18
1N
#835
19
08
0N
#840
09
b10100 L
18
1N
#845
19
08
0N
#850
09
b10101 L
18
1N
#855
19
08
0N
#860
09
b10110 L
18
1N
#865
19
08
0N
#870
09
b10111 L
18
1N
#875
19
08
0N
#880
09
b11000 L
18
1N
#885
19
08
0N
#890
09
b11001 L
18
1N
#895
19
08
0N
#900
09
b11010 L
18
1N
#905
19
08
0N
#910
09
b11011 L
18
1N
#915
19
08
0N
#920
09
b11100 L
18
1N
#925
19
08
0N
#930
09
b11101 L
18
1N
#935
19
08
0N
#940
09
b0 J
b0 L
18
1N
#945
19
08
0N
#950
09
b1 J
b1 L
18
1N
#955
19
08
0N
#960
09
b10 J
b10 L
18
1N
#965
19
08
0N
#970
09
b11 J
b11 L
18
1N
#975
19
08
0N
#980
09
b100 J
b100 L
18
1N
#985
19
08
0N
#990
09
b101 J
b101 L
18
1N
#995
19
08
0N
#1000
09
b110 J
b110 L
18
1N
#1005
19
08
0N
#1010
09
b111 J
b111 L
18
1N
#1015
19
08
0N
#1020
09
b1000 J
b1000 L
18
1N
#1025
19
08
0N
#1030
09
b1001 J
b1001 L
18
1N
#1035
19
08
0N
#1040
09
b1010 J
b1010 L
18
1N
#1045
19
08
0N
#1050
09
b1011 J
b1011 L
18
1N
#1055
19
08
0N
#1060
09
b1100 J
b1100 L
18
1N
#1065
19
08
0N
#1070
09
b1101 J
b1101 L
18
1N
#1075
19
08
0N
#1080
09
b1110 J
b1110 L
18
1N
#1085
19
08
0N
#1090
09
b1111 J
b1111 L
18
1N
#1095
19
08
0N
#1100
09
b0 J
b0 L
18
1N
#1105
19
08
0N
#1110
09
b1 J
b1 L
18
1N
#1115
19
08
0N
#1120
09
b10 J
b10 L
18
1N
#1125
19
08
0N
#1130
09
b11 J
b11 L
18
1N
#1135
19
08
0N
#1140
09
b100 J
b100 L
18
1N
#1145
19
08
0N
#1150
09
b101 J
b101 L
18
1N
#1155
19
08
0N
#1160
09
b110 J
b110 L
18
1N
#1165
19
08
0N
#1170
09
b111 J
b111 L
18
1N
#1175
19
08
0N
#1180
09
b1000 J
b1000 L
18
1N
#1185
19
08
0N
#1190
09
b1001 J
b1001 L
18
1N
#1195
19
08
0N
#1200
09
b1010 J
b1010 L
18
1N
#1205
19
08
0N
#1210
09
b1011 J
b1011 L
18
1N
#1215
19
08
0N
#1220
09
b1100 J
b1100 L
18
1N
#1225
19
08
0N
#1230
09
b1101 J
b1101 L
18
1N
#1235
19
08
0N
#1240
09
b1110 J
b1110 L
18
1N
#1245
19
08
0N
#1250
09
b1111 J
b1111 L
18
1N
#1255
19
08
0N
#1260
09
b10000 L
18
1N
